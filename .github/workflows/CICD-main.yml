name: Build and Push Microservices

on:
  push:
    branches:
      - main  # Change this to your target branch

jobs:
  find-changed-microservices:
    runs-on: ubuntu-latest
    outputs:
      changed_services: ${{ steps.find-changes.outputs.changed_services }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Needed for git diff

      - name: Find Changed Microservices
        id: find-changes
        run: |
          changed_files=$(git diff --name-only HEAD~1)
          echo "Changed files: $changed_files"

          changed_microservices=$(echo "$changed_files" | awk -F'/' '/^src\// {print $2}' | sort -u | paste -sd "," -)
          echo "Changed microservices: $changed_microservices"

          if [ -z "$changed_microservices" ]; then
            echo "No microservices changed. Skipping workflow."
            echo "changed_services=" >> $GITHUB_ENV
            exit 0  # Special exit code to stop the job without failing
          fi

          echo "changed_services=$changed_microservices" >> $GITHUB_ENV

  find-dockerfiles:
    runs-on: ubuntu-latest
    needs: find-changed-microservices
    outputs:
      valid_services: ${{ steps.find-dockerfiles.outputs.valid_services }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Find Dockerfiles
        id: find-dockerfiles
        run: |
          valid_services=""

          IFS=',' read -ra SERVICES <<< "${{ needs.find-changed-microservices.outputs.changed_services }}"
          for service in "${SERVICES[@]}"; do
            dockerfile_path=$(find src/$service -type f -name 'Dockerfile' | head -n 1)
            if [ -n "$dockerfile_path" ]; then
              echo "Dockerfile found: $dockerfile_path"
              valid_services+="$service:$dockerfile_path,"
            else
              echo "No Dockerfile found in $service"
            fi
          done

          valid_services=${valid_services%,}  # Remove trailing comma

          if [ -z "$valid_services" ]; then
            echo "No services with Dockerfile found. Skipping workflow."
            exit 78
          fi

          echo "valid_services=$valid_services" >> $GITHUB_ENV

  login-to-ghcr:
    runs-on: ubuntu-latest
    needs: find-dockerfiles
    steps:
      - name: Log in to GHCR
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
        env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: login-to-ghcr
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build and Push Docker Images
        run: |
          IFS=',' read -ra SERVICES <<< "${{ needs.find-dockerfiles.outputs.valid_services }}"
          for entry in "${SERVICES[@]}"; do
            IFS=':' read -r service dockerfile_path <<< "$entry"
            image_name="ghcr.io/${{ secrets.GHCR_USERNAME }}/$service:latest"
            dockerfile_dir=$(dirname "$dockerfile_path")

            echo "Building and pushing image for $service..."
            docker build -t $image_name $dockerfile_dir
            docker push $image_name

            echo "Successfully pushed $image_name"
          done
